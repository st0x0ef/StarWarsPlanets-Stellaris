plugins {
    id "dev.architectury.loom" version "1.7-SNAPSHOT" apply false
    id "architectury-plugin" version "3.4-SNAPSHOT"
    id 'com.github.johnrengelman.shadow' version '8.1.1' apply false
    id "me.modmuss50.mod-publish-plugin" version "0.7.4"
}

architectury {
    minecraft = project.minecraftVersion
}

subprojects {
    apply plugin: 'dev.architectury.loom'
    apply plugin: 'architectury-plugin'
    apply plugin: 'maven-publish'
    apply plugin: 'me.modmuss50.mod-publish-plugin'

    base {
        archivesName = "${rootProject.modid}-${rootProject.minecraftVersion}-${project.name}"
    }

    repositories {
        maven { url "https://maven.shedaniel.me" }
        maven { url "https://cursemaven.com" }
        maven { url "https://maven.terraformersmc.com/releases" }
        maven { url "https://maven.parchmentmc.org" }
        maven { url "https://maven.neoforged.net/releases" }
        maven { url "https://maven.blamejared.com/" }
        exclusiveContent {
            forRepository {
                maven {
                    name = "Modrinth"
                    url = "https://api.modrinth.com/maven"
                }
            }
            filter {
                includeGroup "maven.modrinth"
            }
        }
    }

    dependencies {
        minecraft "com.mojang:minecraft:${rootProject.minecraftVersion}"

        mappings loom.layered() {
            officialMojangMappings()
            parchment("org.parchmentmc.data:parchment-${rootProject.minecraftVersion}:${rootProject.parchmentVersion}@zip")
        }

        modCompileOnly "me.shedaniel:RoughlyEnoughItems-api:${rootProject.reiVersion}"
        modCompileOnly "me.shedaniel:RoughlyEnoughItems-default-plugin:${rootProject.reiVersion}"
        modCompileOnly "mezz.jei:jei-${minecraftVersion}-common-api:${jeiVersion}"
        modCompileOnly("maven.modrinth:stellaris:${stellarisVersion}-fabric")
    }

    java {
        withSourcesJar()

        sourceCompatibility = JavaVersion.VERSION_21
        targetCompatibility = JavaVersion.VERSION_21
    }

    tasks.withType(JavaCompile).configureEach {
        it.options.release = 21
    }
}

allprojects {
    group = rootProject.mavenGroup
    version = rootProject.version
}
